syntax = "proto2";
option optimize_for = SPEED;

package ceph_fleet_update;

// Result that returns a string
message VersionResult {
  required ResultType result = 1;
  optional Version version = 2;
  optional string error_msg = 3;
}

// Debian specific Version messages
message Version {
  required uint32 epoch = 1;
  required VersionPart upstream_version = 2;
  required VersionPart debian_revision = 3;
}

message VersionElement {
  required string alpha = 1;
  required uint64 numeric = 2;
}

message VersionPart {
  repeated VersionElement elements = 1;
}
// Debian specific Version messages

// Host Result messages
message HostResult {
  required ResultType result = 1;
  repeated CephServer hosts = 2;
  optional string error_msg = 3;
}

message CephServer {
  required string addr = 1;
  required string id = 2;
  optional int64 rank = 3;
  required CephComponent component = 4;
}

message OpResult {
  required ResultType result = 1;
  optional string error_msg = 2;
}

// Used to communicate back the ceph release differential
message ReleaseResult {
  required ResultType result = 1;
  required CephRelease from_release = 2;
  required CephRelease to_release = 3;
  optional string error_msg = 4;
}

enum ResultType{
  OK = 0;
  ERR = 1;
}

enum CephComponent {
  Mon = 0;
  Osd = 1;
  Rgw = 2;
  Mds = 3;
  Mgr = 4;
}

enum CephRelease {
  Dumpling = 0;
  Emperor = 1;
  Firefly = 2;
  Giant = 3;
  Hammer = 4;
  Infernalis = 5;
  Jewel = 6;
  Kraken = 7;
  Luminous = 8;
  Unknown = 9;
}

enum Op {
  // What version are you currently running
  InstalledVersion = 1;
  RunningVersion = 2;
  // Start upgrading yourself
  Upgrade = 3;
  Stop = 4;
  ListHosts = 5;
  // Transition to leader and start rolling upgrade
  BecomeLeader = 6;
  // Final validation steps that may need to be performed
  // Uses the from_release, to_release Operation fields to inform the
  // monitor host about the differential and let it do the appropriate
  // things
  Validate = 7;
}

// Service operations that can be performed
message Operation {
  required Op Op_type = 1;
  // Version to upgrade to
  optional Version version = 2;
  // used for Upgrade and RunningVersion Op
  optional CephComponent service = 3;
  // If apt and reqwest should use a proxy to download files
  optional string http_proxy = 4;
  optional string https_proxy = 5;
  // URL to the repository key
  optional string gpg_key = 6;
  // apt source line to use
  optional string apt_source = 7;
  // Force remove ceph packages before reinstalling
  optional bool force_remove = 8;
  // The release we upgraded from
  optional CephRelease from_release = 9;
  // The release we upgraded to
  optional CephRelease to_release = 10;
}
